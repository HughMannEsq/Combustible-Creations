@page
@model AutumnRidgeUSA.Pages.Admin.ClientsModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<h2>Admin Dashboard</h2>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-info">
        @Model.StatusMessage
    </div>
}

<!-- Storage Contract Modal -->
<div id="storageModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Contract Details</h3>
            <span class="close" onclick="closeStorageModal()">&times;</span>
        </div>
        <div class="modal-body" id="storageModalBody">
            <!-- Content will be dynamically inserted here -->
        </div>
    </div>
</div>

<!-- Tab Navigation -->
<div class="tab-container">
    <div class="tab-buttons">
        <button class="tab-button active" onclick="showTab('clients')">Client Database</button>
        <button class="tab-button" onclick="showTab('tempsignups')">Temp Signups (@Model.TempSignups.Count)</button>
    </div>

    <!-- Clients Tab -->
    <div id="clients-tab" class="tab-content active">
        <div class="tab-header">
            <h3>Registered Clients</h3>
            <p>Total clients: @Model.Clients.Count</p>
        </div>

        <!-- Hidden Division Filtering Form -->
        <form method="get" id="divisionFilterForm" style="display: none;">
            <input type="hidden" name="filterOperator" id="filterOperatorInput" value="@Model.DivisionFilter.FilterOperator" />
            @foreach (var division in Model.DivisionFilter.AvailableDivisions)
            {
                <input type="checkbox" name="selectedDivisions" value="@division.Id"
                       id="hidden-@division.Id"
                @(Model.DivisionFilter.SelectedDivisionIds.Contains(division.Id) ? "checked" : "") />
            }
        </form>

        <table id="clientsTable" class="data-table">
            <thead>
                <tr>
                    <th>UserId</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Address</th>
                    <th>Divisions</th>
                    <th>Signup Date</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in Model.Clients)
                {
                    <tr>
                        <td><strong>@client.UserId</strong></td>
                        <td>@client.FullName</td>
                        <td>
                            <a href="mailto:@client.Email" style="color: #007bff; text-decoration: none;">
                                @client.Email
                            </a>
                        </td>
                        <td>@(client.PhoneNumber ?? "N/A")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(client.FullAddress))
                            {
                                <span title="@client.FullAddress">@client.FullAddress</span>
                            }
                            else
                            {
                                <span style="color: #666; font-style: italic;">No address</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(client.Divisions))
                            {
                                <div class="divisions-cell">
                                    @foreach (var division in client.Divisions.Split(','))
                                    {
                                        var divName = division.Trim();
                                        var divClass = divName.ToLower().Replace(" ", "");

                                        <span class="division-badge division-@divClass">
                                            @divName
                                        </span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">None</span>
                            }
                        </td>
                        <td>@client.SignupDate.ToString("MM/dd/yyyy")</td>
                        <td style="text-align: right; font-weight: bold;">@client.Balance.ToString("C")</td>
                    </tr>
                }

                @if (!Model.Clients.Any())
                {
                    <tr>
                        <td colspan="8" class="no-data">No clients found matching current filters</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Temp Signups Tab -->
    <div id="tempsignups-tab" class="tab-content">
        <div class="tab-header">
            <h3>Temporary Signups</h3>
            <div class="tab-actions">
                <p>Pending signups: @Model.TempSignups.Count</p>
                <form method="post" asp-page-handler="CleanupExpired" style="display: inline;">
                    <button type="submit" class="btn btn-warning" onclick="return confirm('Delete all expired signups?')">
                        Clean Up Expired
                    </button>
                </form>
            </div>
        </div>

        <table id="tempSignupsTable" class="data-table">
            <thead>
                <tr>
                    <th>UserId</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Created</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var signup in Model.TempSignups)
                {
                    <tr class="@(signup.IsExpired ? "expired-row" : "")">
                        <td><strong>@signup.UserId</strong></td>
                        <td>@signup.LastName, @signup.FirstName</td>
                        <td>
                            <a href="mailto:@signup.Email" style="color: #007bff; text-decoration: none;">
                                @signup.Email
                            </a>
                        </td>
                        <td>@signup.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>
                            @if (signup.IsExpired)
                            {
                                <span class="status-expired">EXPIRED</span>
                            }
                            else if (signup.IsAuthorized)
                            {
                                <span class="status-authorized">AUTHORIZED</span>
                            }
                            else
                            {
                                <span class="status-pending">@signup.TimeRemaining</span>
                            }
                        </td>
                        <td>
                            @if (!signup.IsAuthorized)
                            {
                                <form method="post" asp-page-handler="DeleteTempSignup" style="display: inline;">
                                    <input type="hidden" name="signupId" value="@signup.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm"
                                            onclick="return confirm('Delete signup for @signup.Email?')">
                                        Delete
                                    </button>
                                </form>

                                @if (!signup.IsExpired)
                                {
                                    <form method="post" asp-page-handler="ResendEmail" style="display: inline;">
                                        <input type="hidden" name="signupId" value="@signup.Id" />
                                        <button type="submit" class="btn btn-primary btn-sm">
                                            Resend
                                        </button>
                                    </form>
                                }
                            }
                        </td>
                    </tr>
                }

                @if (!Model.TempSignups.Any())
                {
                    <tr>
                        <td colspan="6" class="no-data">No temporary signups found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

    <style>
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 0;
            border: 1px solid #888;
            border-radius: 8px;
            width: 500px;
            max-width: 90%;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .modal-header {
            background-color: #1e3a5f;
            color: white;
            padding: 15px 20px;
            border-radius: 8px 8px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .modal-header h3 {
                margin: 0;
            }

        .close {
            color: white;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            line-height: 20px;
        }

            .close:hover {
                color: #f0f0f0;
            }

        .modal-body {
            padding: 20px;
        }

        /* Tab Styles */
        .tab-container {
            margin-top: 20px;
        }

        .tab-buttons {
            display: flex;
            border-bottom: 2px solid #ddd;
            margin-bottom: 20px;
        }

        .tab-button {
            background: none;
            border: none;
            padding: 12px 20px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            font-weight: bold;
            color: #666;
            transition: all 0.3s;
        }

            .tab-button:hover {
                color: #1e3a5f;
                background-color: #f8f9fa;
            }

            .tab-button.active {
                color: #1e3a5f;
                border-bottom-color: #1e3a5f;
            }

        .tab-content {
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        .tab-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .tab-actions {
            display: flex;
            gap: 15px;
            align-items: center;
        }

        /* Division badges */
        .divisions-cell {
            display: flex;
            gap: 4px;
            flex-wrap: wrap;
        }

        .division-badge {
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .division-storage {
            background-color: #e3f2fd;
            color: #1565c0;
            border: 1px solid #bbdefb;
        }

        .division-contracting {
            background-color: #fff3e0;
            color: #ef6c00;
            border: 1px solid #ffcc02;
        }

        .division-realestate {
            background-color: #e8f5e8;
            color: #2e7d32;
            border: 1px solid #c8e6c9;
        }

        /* Table Styles */
        .data-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .data-table thead th {
                background-color: #f8f9fa;
                border: 1px solid #ddd;
                padding: 12px;
                text-align: left;
                font-weight: bold;
                color: #495057;
            }

            .data-table tbody td {
                border: 1px solid #ddd;
                padding: 10px 12px;
                vertical-align: middle;
            }

            .data-table tbody tr:hover {
                background-color: #f8f9fa;
            }

        .expired-row {
            background-color: #ffe6e6;
        }

        .no-data {
            text-align: center;
            font-style: italic;
            color: #666;
            padding: 20px;
        }

        /* Status Badges */
        .status-expired {
            background-color: #dc3545;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        .status-authorized {
            background-color: #28a745;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        .status-pending {
            background-color: #ffc107;
            color: #212529;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        /* Button Styles */
        .btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.2s;
        }

        .btn-sm {
            padding: 4px 8px;
            font-size: 11px;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
        }

        .btn-warning {
            background-color: #ffc107;
            color: #212529;
        }

        .text-muted {
            color: #666;
            font-style: italic;
        }
    </style>

    <script>
        function closeStorageModal() {
            document.getElementById('storageModal').style.display = 'none';
        }

        function showTab(tabName) {
            $('.tab-content').removeClass('active');
            $('.tab-button').removeClass('active');
            $('#' + tabName + '-tab').addClass('active');
            $(event.target).addClass('active');
        }

        $(document).ready(function () {
            $('#clientsTable').DataTable({
                "order": [[6, "desc"]],
                "pageLength": 25
            });
        });

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('storageModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }
    </script>
}