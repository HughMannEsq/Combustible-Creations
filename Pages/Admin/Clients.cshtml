@page
@model AutumnRidgeUSA.Pages.Admin.ClientsModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<h2>Admin Dashboard</h2>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-info">
        @Model.StatusMessage
    </div>
}

<!-- Tab Navigation -->
<div class="tab-container">
    <div class="tab-buttons">
        <button class="tab-button active" onclick="showTab('clients')">Client Database</button>
        <button class="tab-button" onclick="showTab('tempsignups')">Temp Signups (@Model.TempSignups.Count)</button>
    </div>

    <!-- Clients Tab -->
    <div id="clients-tab" class="tab-content active">
        <div class="tab-header">
            <h3>Registered Clients</h3>
            <p>Total clients: @Model.Clients.Count</p>
        </div>

        <!-- Hidden Division Filtering Form (kept for form submission) -->
        <form method="get" id="divisionFilterForm" style="display: none;">
            <input type="hidden" name="filterOperator" id="filterOperatorInput" value="@Model.DivisionFilter.FilterOperator" />
            @foreach (var division in Model.DivisionFilter.AvailableDivisions)
            {
                <input type="checkbox" name="selectedDivisions" value="@division.Id"
                       id="hidden-@division.Id"
                @(Model.DivisionFilter.SelectedDivisionIds.Contains(division.Id) ? "checked" : "") />
            }
        </form>

        <table id="clientsTable" class="data-table">
            <thead>
                <tr>
                    <th>UserId</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Address</th>
                    <th>Divisions</th>
                    <th>Signup Date</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in Model.Clients)
                {
                    <tr>
                        <td><strong>@client.UserId</strong></td>
                        <td>@client.FullName</td>
                        <td>
                            <a href="mailto:@client.Email" style="color: #007bff; text-decoration: none;">
                                @client.Email
                            </a>
                        </td>
                        <td>@(client.PhoneNumber ?? "N/A")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(client.FullAddress))
                            {
                                <span title="@client.FullAddress">@client.FullAddress</span>
                            }
                            else
                            {
                                <span style="color: #666; font-style: italic;">No address</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(client.Divisions))
                            {
                                <div class="divisions-cell">
                                    @foreach (var division in client.Divisions.Split(','))
                                    {
                                        <span class="division-badge division-@division.Trim().ToLower().Replace(" ", "")">
                                            @division.Trim()
                                        </span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">None</span>
                            }
                        </td>
                        <td>@client.SignupDate.ToString("MM/dd/yyyy")</td>
                        <td style="text-align: right; font-weight: bold;">@client.Balance.ToString("C")</td>
                    </tr>
                }

                @if (!Model.Clients.Any())
                {
                    <tr>
                        <td colspan="8" class="no-data">No clients found matching current filters</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Temp Signups Tab -->
    <div id="tempsignups-tab" class="tab-content">
        <div class="tab-header">
            <h3>Temporary Signups</h3>
            <div class="tab-actions">
                <p>Pending signups: @Model.TempSignups.Count</p>
                <form method="post" asp-page-handler="CleanupExpired" style="display: inline;">
                    <button type="submit" class="btn btn-warning" onclick="return confirm('Delete all expired signups?')">
                        Clean Up Expired
                    </button>
                </form>
            </div>
        </div>

        <table id="tempSignupsTable" class="data-table">
            <thead>
                <tr>
                    <th>UserId</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Created</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var signup in Model.TempSignups)
                {
                    <tr class="@(signup.IsExpired ? "expired-row" : "")">
                        <td><strong>@signup.UserId</strong></td>
                        <td>@signup.LastName, @signup.FirstName</td>
                        <td>
                            <a href="mailto:@signup.Email" style="color: #007bff; text-decoration: none;">
                                @signup.Email
                            </a>
                        </td>
                        <td>@signup.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                        <td>
                            @if (signup.IsExpired)
                            {
                                <span class="status-expired">EXPIRED</span>
                            }
                            else if (signup.IsAuthorized)
                            {
                                <span class="status-authorized">AUTHORIZED</span>
                            }
                            else
                            {
                                <span class="status-pending">@signup.TimeRemaining</span>
                            }
                        </td>
                        <td>
                            @if (!signup.IsAuthorized)
                            {
                                <form method="post" asp-page-handler="DeleteTempSignup" style="display: inline;">
                                    <input type="hidden" name="signupId" value="@signup.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm"
                                            onclick="return confirm('Delete signup for @signup.Email?')">
                                        Delete
                                    </button>
                                </form>

                                @if (!signup.IsExpired)
                                {
                                    <form method="post" asp-page-handler="ResendEmail" style="display: inline;">
                                        <input type="hidden" name="signupId" value="@signup.Id" />
                                        <button type="submit" class="btn btn-primary btn-sm">
                                            Resend
                                        </button>
                                    </form>
                                }
                            }
                        </td>
                    </tr>
                }

                @if (!Model.TempSignups.Any())
                {
                    <tr>
                        <td colspan="6" class="no-data">No temporary signups found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

    <style>
        /* Tab Styles */
        .tab-container {
            margin-top: 20px;
        }

        .tab-buttons {
            display: flex;
            border-bottom: 2px solid #ddd;
            margin-bottom: 20px;
        }

        .tab-button {
            background: none;
            border: none;
            padding: 12px 20px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            font-weight: bold;
            color: #666;
            transition: all 0.3s;
        }

            .tab-button:hover {
                color: #1e3a5f;
                background-color: #f8f9fa;
            }

            .tab-button.active {
                color: #1e3a5f;
                border-bottom-color: #1e3a5f;
            }

        .tab-content {
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        .tab-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .tab-actions {
            display: flex;
            gap: 15px;
            align-items: center;
        }

        /* Custom Toolbar Styles */
        .custom-toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .toolbar-left {
            display: flex;
            align-items: center;
            gap: 10px;
            position: relative;
        }

        .toolbar-right {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Filter Divisions Button and Dropdown */
        .filter-divisions-btn {
            padding: 8px 16px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s;
        }

            .filter-divisions-btn:hover {
                background-color: #e9ecef;
                border-color: #1e3a5f;
            }

            .filter-divisions-btn.active {
                background-color: #1e3a5f;
                color: white;
                border-color: #1e3a5f;
            }

        .dropdown-container {
            position: relative;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            top: calc(100% + 5px);
            left: 0;
            background: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 15px;
            z-index: 1000;
            min-width: 350px;
            max-width: 500px;
        }

            .dropdown-content.show {
                display: block;
            }

        .dropdown-header {
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
            font-weight: 600;
            color: #1e3a5f;
        }

        .dropdown-content .division-checkboxes {
            display: flex;
            flex-direction: column;
            gap: 8px;
            max-height: 300px;
            overflow-y: auto;
        }

        .dropdown-content .division-checkbox {
            display: flex;
            align-items: center;
            padding: 8px 12px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s;
        }

            .dropdown-content .division-checkbox:hover {
                background-color: #e3f2fd;
                border-color: #1e3a5f;
            }

            .dropdown-content .division-checkbox input[type="checkbox"] {
                margin-right: 8px;
                cursor: pointer;
            }

        /* Operator Button */
        .operator-btn {
            padding: 6px 12px;
            border-radius: 20px;
            border: none;
            font-weight: bold;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s;
            text-transform: uppercase;
        }

            .operator-btn.and {
                background-color: #dc3545;
                color: white;
            }

            .operator-btn.or {
                background-color: #28a745;
                color: white;
            }

        /* Action Buttons */
        .action-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: all 0.2s;
        }

            .action-btn.primary {
                background-color: #007bff;
                color: white;
            }

                .action-btn.primary:hover {
                    background-color: #0056b3;
                }

            .action-btn.secondary {
                background-color: #6c757d;
                color: white;
            }

                .action-btn.secondary:hover {
                    background-color: #545b62;
                }

        /* Division badges in table */
        .divisions-cell {
            display: flex;
            gap: 4px;
            flex-wrap: wrap;
        }

        .division-badge {
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .division-storage {
            background-color: #e3f2fd;
            color: #1565c0;
            border: 1px solid #bbdefb;
        }

        .division-contracting {
            background-color: #fff3e0;
            color: #ef6c00;
            border: 1px solid #ffcc02;
        }

        .division-realestate {
            background-color: #e8f5e8;
            color: #2e7d32;
            border: 1px solid #c8e6c9;
        }

        /* Table Styling */
        .data-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .data-table thead th {
                background-color: #f8f9fa;
                border: 1px solid #ddd;
                padding: 12px;
                text-align: left;
                font-weight: bold;
                color: #495057;
            }

            .data-table tbody td {
                border: 1px solid #ddd;
                padding: 10px 12px;
                vertical-align: middle;
            }

            .data-table tbody tr:hover {
                background-color: #f8f9fa;
            }

        .expired-row {
            background-color: #ffe6e6;
        }

            .expired-row:hover {
                background-color: #ffcccc;
            }

        .no-data {
            text-align: center;
            font-style: italic;
            color: #666;
            padding: 20px;
        }

        /* Status Badges */
        .status-expired {
            background-color: #dc3545;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        .status-authorized {
            background-color: #28a745;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        .status-pending {
            background-color: #ffc107;
            color: #212529;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
        }

        /* Button Styling */
        .btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.2s;
        }

        .btn-sm {
            padding: 4px 8px;
            font-size: 11px;
        }

        .btn-danger {
            background-color: #dc3545;
            color: white;
        }

            .btn-danger:hover {
                background-color: #c82333;
            }

        .btn-primary {
            background-color: #007bff;
            color: white;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-warning {
            background-color: #ffc107;
            color: #212529;
        }

            .btn-warning:hover {
                background-color: #e0a800;
            }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

            .btn-secondary:hover {
                background-color: #545b62;
            }

        /* Alert Styling */
        .alert {
            padding: 12px;
            margin: 15px 0;
            border-radius: 4px;
            border: 1px solid transparent;
        }

        .alert-info {
            background-color: #d1ecf1;
            border-color: #bee5eb;
            color: #0c5460;
        }

        /* DataTables Integration */
        .dataTables_filter label {
            margin-bottom: 0;
        }

        .dataTables_filter input {
            margin-left: 0.5em;
            padding: 5px 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .dataTables_length label {
            margin-bottom: 0;
        }

        .dataTables_length select {
            margin: 0 0.5em;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .text-muted {
            color: #666;
            font-style: italic;
        }
    </style>

    <script>
        var dataTable;
        var divisionsData = @Html.Raw(Json.Serialize(Model.DivisionFilter.AvailableDivisions.Select(d => new
            {
                Id = d.Id,
                Name = d.Name,
                Count = Model.Clients.Count(c => c.Divisions.Contains(d.Name)),
                Selected = Model.DivisionFilter.SelectedDivisionIds.Contains(d.Id)
            })));

        $(document).ready(function () {
            // Initialize DataTable
            dataTable = $('#clientsTable').DataTable({
                "order": [[6, "desc"]],
                "pageLength": 25,
                "dom": 'rt<"bottom"ip><"clear">' // Remove default controls
            });

            // Create custom toolbar
            createCustomToolbar();
        });

        function createCustomToolbar() {
            var currentOperator = $('#filterOperatorInput').val() || 'OR';

            // Build custom toolbar HTML
            var toolbarHTML =
                '<div class="custom-toolbar">' +
                    '<div class="toolbar-left">' +
                        '<div class="dataTables_filter">' +
                            '<label>Search: <input type="search" id="customSearch" placeholder="Type to search..."></label>' +
                        '</div>' +
                        '<div class="dropdown-container">' +
                            '<button type="button" class="filter-divisions-btn" onclick="toggleDivisionsDropdown()">' +
                                'Filter by Divisions ▼' +
                            '</button>' +
                            '<div class="dropdown-content" id="divisionDropdown">' +
                                '<div class="dropdown-header">' +
                                    '<strong>Select Divisions:</strong>' +
                                '</div>' +
                                '<div class="division-checkboxes" id="dropdownDivisions"></div>' +
                            '</div>' +
                        '</div>' +
                        '<button type="button" class="operator-btn ' + currentOperator.toLowerCase() + '" id="operatorBtn" onclick="toggleOperator()">' +
                            currentOperator +
                        '</button>' +
                        '<button type="button" class="action-btn primary" onclick="applyFilters()">Apply Filters</button>' +
                        '<a href="@Url.Page("/Admin/Clients")" class="action-btn secondary">Clear Filters</a>' +
                    '</div>' +
                    '<div class="toolbar-right">' +
                        '<div class="dataTables_length">' +
                            '<label>Show ' +
                                '<select id="customLength">' +
                                    '<option value="10">10</option>' +
                                    '<option value="25" selected>25</option>' +
                                    '<option value="50">50</option>' +
                                    '<option value="100">100</option>' +
                                '</select> entries' +
                            '</label>' +
                        '</div>' +
                    '</div>' +
                '</div>';

            // Insert toolbar before table
            $('#clientsTable_wrapper').prepend(toolbarHTML);

            // Populate division checkboxes
            populateDivisionDropdown();

            // Wire up custom search
            $('#customSearch').on('keyup', function() {
                dataTable.search(this.value).draw();
            });

            // Wire up custom length selector
            $('#customLength').on('change', function() {
                dataTable.page.len(this.value).draw();
            });
        }

        function populateDivisionDropdown() {
            var dropdownContainer = $('#dropdownDivisions');
            dropdownContainer.empty();

            for (var i = 0; i < divisionsData.length; i++) {
                var division = divisionsData[i];
                var dropdownItem =
                    '<label class="division-checkbox">' +
                        '<input type="checkbox" value="' + division.id + '" ' +
                        (division.selected ? 'checked' : '') +
                        ' onchange="syncCheckbox(' + division.id + ', this.checked)">' +
                        division.name + ' (' + division.count + ')' +
                    '</label>';

                dropdownContainer.append(dropdownItem);
            }
        }

        function syncCheckbox(divisionId, checked) {
            // Sync with hidden form checkbox
            $('#hidden-' + divisionId).prop('checked', checked);
        }

        function toggleDivisionsDropdown() {
            var dropdown = $('#divisionDropdown');
            var btn = $('.filter-divisions-btn');

            if (dropdown.hasClass('show')) {
                dropdown.removeClass('show');
                btn.removeClass('active');
            } else {
                dropdown.addClass('show');
                btn.addClass('active');
            }
        }

        function toggleOperator() {
            var operatorBtn = $('#operatorBtn');
            var operatorInput = $('#filterOperatorInput');

            if (operatorInput.val() === 'AND') {
                operatorInput.val('OR');
                operatorBtn.text('OR');
                operatorBtn.removeClass('and').addClass('or');
            } else {
                operatorInput.val('AND');
                operatorBtn.text('AND');
                operatorBtn.removeClass('or').addClass('and');
            }
        }

        function applyFilters() {
            $('#divisionFilterForm').submit();
        }

        function showTab(tabName) {
            // Hide all tab contents
            $('.tab-content').removeClass('active');

            // Remove active class from all buttons
            $('.tab-button').removeClass('active');

            // Show selected tab
            $('#' + tabName + '-tab').addClass('active');

            // Add active class to clicked button
            $(event.target).addClass('active');
        }

        // Close dropdown when clicking outside
        $(document).on('click', function(event) {
            var dropdown = $('#divisionDropdown');
            var btn = $('.filter-divisions-btn');
            var dropdownContainer = $('.dropdown-container');

            if (!dropdownContainer.is(event.target) && dropdownContainer.has(event.target).length === 0) {
                dropdown.removeClass('show');
                btn.removeClass('active');
            }
        });

        // Prevent dropdown from closing when clicking inside
        $('#divisionDropdown').on('click', function(event) {
            event.stopPropagation();
        });
    </script>
}